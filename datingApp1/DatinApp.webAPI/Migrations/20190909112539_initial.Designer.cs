// <auto-generated />
using System;
using DatinApp.webAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatinApp.webAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190909112539_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<string>("country")
                        .IsRequired();

                    b.Property<string>("state")
                        .IsRequired();

                    b.Property<string>("street");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Like", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("likeeIdId");

                    b.Property<int?>("likerIdId");

                    b.Property<DateTime>("time");

                    b.Property<int?>("userId");

                    b.HasKey("id");

                    b.HasIndex("likeeIdId");

                    b.HasIndex("likerIdId");

                    b.HasIndex("userId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content");

                    b.Property<DateTime>("delivery");

                    b.Property<int?>("recieverIdId");

                    b.Property<int?>("senderIdId");

                    b.Property<DateTime>("timeSent");

                    b.Property<int?>("userId");

                    b.HasKey("id");

                    b.HasIndex("recieverIdId");

                    b.HasIndex("senderIdId");

                    b.HasIndex("userId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Photo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("isMain");

                    b.Property<string>("photo");

                    b.Property<DateTime>("time");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("gender");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("userName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Video", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("time");

                    b.Property<int>("userId");

                    b.Property<string>("video");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Address", b =>
                {
                    b.HasOne("DatinApp.webAPI.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Like", b =>
                {
                    b.HasOne("DatinApp.webAPI.Data.Models.User", "likeeId")
                        .WithMany()
                        .HasForeignKey("likeeIdId");

                    b.HasOne("DatinApp.webAPI.Data.Models.User", "likerId")
                        .WithMany()
                        .HasForeignKey("likerIdId");

                    b.HasOne("DatinApp.webAPI.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Message", b =>
                {
                    b.HasOne("DatinApp.webAPI.Data.Models.User", "recieverId")
                        .WithMany()
                        .HasForeignKey("recieverIdId");

                    b.HasOne("DatinApp.webAPI.Data.Models.User", "senderId")
                        .WithMany()
                        .HasForeignKey("senderIdId");

                    b.HasOne("DatinApp.webAPI.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Photo", b =>
                {
                    b.HasOne("DatinApp.webAPI.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DatinApp.webAPI.Data.Models.Video", b =>
                {
                    b.HasOne("DatinApp.webAPI.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
